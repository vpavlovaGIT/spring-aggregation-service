server:
  port: 8080

spring:
  application:
    name: service-aggregation

  web:
    reactive:
      base-path: /api

  datasource:
    url: jdbc:postgresql://localhost:5432/service_db
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

kafka:
  bootstrap-servers: localhost:9092
  producer-topic: aggregation-results
  consumer-topic: input-topic
  group-id: aggregation-group

outbox:
  topic: aggregation-results
  batch-size: 100
  thread-pool: 10

management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,info

# Настройки внешних сервисов
external-services:
  first-service-url: http://first-service/api/data
  second-service-url: http://second-service/api/data

# Настройки OpenAPI (Springdoc)
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    url: /openapi/aggregation-api.yaml

# Настройки Resilience4j
resilience4j.circuitbreaker:
  instances:
    firstService:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 30000
      minimumNumberOfCalls: 5
    secondService:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 30000
      minimumNumberOfCalls: 5

logging:
  starter:
    log-web: true